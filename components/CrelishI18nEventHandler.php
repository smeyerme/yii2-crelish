<?php

namespace giantbits\crelish\components;

use DeepL\DeepLException;
use DeepL\Translator;
use Doctrine\Inflector\Language;
use Scn\DeeplApiConnector\DeeplClientFactory;
use Scn\DeeplApiConnector\Enum\LanguageEnum;
use Scn\DeeplApiConnector\Exception\RequestException;
use Scn\DeeplApiConnector\Model\TranslationConfig;
use Yii;
use yii\i18n\MissingTranslationEvent;
use function _\upperCase;

/**
 *
 */
class CrelishI18nEventHandler
{

  /**
   * [handleMissingTranslation description]
   * @param MissingTranslationEvent $event [description]
   * @return [type]                         [description]
   * @throws DeepLException
   */
  public static function handleMissingTranslation(MissingTranslationEvent $event): void
  {
    if (empty($event->message)) {
      return;
    }

    // Initialize vars
    $translatedText = null;
    $category = $event->category;
    $message = $event->message;
    $language = $event->language;
    $sourceLanguage = Yii::$app->sourceLanguage ?? 'en';
    $apiKey = $_ENV['DEEPL_API_KEY'];

    // Initialize file system
    $translationObject = null;
    $file = $event->sender->basePath . "/" . $event->language;

    if (!is_dir(\Yii::getAlias($file))) {
      mkdir(\Yii::getAlias($file));
    }

    $file = \Yii::getAlias($file) . "/" . $category . ".php";

    if (file_exists($file)) {
      $translation = include($file);
    } else {
      $translation = [];
    }

    if(Yii::$app->params['crelish']['enable_autotranslation']) {
      // Start translation process
      $translator = new Translator($apiKey);

      $result = $translator->translateText(
        $message,
        upperCase($sourceLanguage),
        upperCase($language),
      );

      $translatedText = $result->text;
    }

    if ($translatedText) {
      $translation[$event->message] = $translatedText;
      ksort($translation);

      file_put_contents($file, "<?php \n// This file was autogenerated by CrelishI18n-Event Handler \n// You can savely edit it to your needs.\n// Last update: " . date("d.m.Y H:i:s", time()) . "\n\n return " . var_export($translation, true) . "; \n");
    } else {
      $translation[$event->message] = $event->message;
      ksort($translation);

      file_put_contents($file, "<?php \n// This file was autogenerated by CrelishI18n-Event Handler \n// You can savely edit it to your needs.\n// Last update: " . date("d.m.Y H:i:s", time()) . "\n\n return " . var_export($translation, true) . "; \n");
    }

    $event->translatedMessage = $event->message;
  }
}
