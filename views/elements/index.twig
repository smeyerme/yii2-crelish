

<div class="elements-index">
  <div class="container-fluid">
    <div class="row">
      <div class="col-12">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">{{ t('app', 'Element Types') }}</h5>
            <a href="{{ url('elements/create') }}" class="btn btn-primary">
              <i class="fa fa-plus"></i> {{ t('app', 'Create New Element Type') }}
            </a>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-striped table-hover">
                <thead>
                  <tr>
                    <th>{{ t('app', 'Label') }}</th>
                    <th>{{ t('app', 'Key') }}</th>
                    <th>{{ t('app', 'Storage') }}</th>
                    <th>{{ t('app', 'Category') }}</th>
                    <th>{{ t('app', 'Actions') }}</th>
                  </tr>
                </thead>
                <tbody>
                {% for key, value in data %}
                  {% set elementKey = value|replace({'.json': ''}) %}
                  <tr>
                    <td>{{ key }}</td>
                    <td><code>{{ elementKey }}</code></td>
                    <td>{{ elementKey.storage|default('db') }}</td>
                    <td>{{ elementKey.category|default('Content') }}</td>
                    <td>
                      <div class="btn-group" role="group">
                        <a href="{{ url('elements/edit', {'element': value}) }}" class="btn btn-sm btn-primary">
                          <i class="fa fa-edit"></i> {{ t('app', 'Edit') }}
                        </a>
                        <button type="button" class="btn btn-sm btn-danger delete-element" data-key="{{ elementKey }}">
                          <i class="fa fa-trash"></i> {{ t('app', 'Delete') }}
                        </button>
                      </div>
                    </td>
                  </tr>
                {% endfor %}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteModalLabel">{{ t('app', 'Confirm Delete') }}</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        {{ t('app', 'Are you sure you want to delete this element type? This action cannot be undone.') }}
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ t('app', 'Cancel') }}</button>
        <button type="button" class="btn btn-danger" id="confirmDelete">{{ t('app', 'Delete') }}</button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Delete element functionality
  const deleteButtons = document.querySelectorAll('.delete-element');
  const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
  const confirmDeleteButton = document.getElementById('confirmDelete');
  let elementToDelete = null;
  
  deleteButtons.forEach(button => {
    button.addEventListener('click', function() {
      elementToDelete = this.dataset.key;
      deleteModal.show();
    });
  });
  
  confirmDeleteButton.addEventListener('click', function() {
    if (elementToDelete) {
      // Send delete request
      fetch('/elements/delete', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({ key: elementToDelete })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Reload page on success
          window.location.reload();
        } else {
          alert(data.message || 'Error deleting element');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while deleting the element');
      })
      .finally(() => {
        deleteModal.hide();
      });
    }
  });
});
</script>


