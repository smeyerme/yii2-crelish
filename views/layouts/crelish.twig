{{ use('giantbits/crelish/widgets/FlashMessages') }}
{{ use('giantbits/crelish/components/widgets/HeaderBar') }}
{% set crelishBundle = register_asset_bundle('giantbits/crelish/CrelishAsset', true) %}
{{ register_asset_bundle('giantbits/crelish/CrelishModernAsset') }}
{{ void(this.beginPage()) }}
<!DOCTYPE html>
<html lang="{{ app.language }}" data-theme="light">
<head>
	<meta charset="{{ app.charset }}">
	<meta name="viewport" content="width=device-width, minimum-scale=1, maximum-scale=1, user-scalable=no">
	<title>Crelish {% if this.title %}| {% endif %} {{ html.encode(this.title) }}</title>
	{{ html.csrfMetaTags | raw }}
	<!-- Prevent flash of light theme -->
	<script>
		(function() {
			// Check for saved theme preference or use OS preference
			var savedTheme = localStorage.getItem('theme');
			var prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)').matches;
			var theme = savedTheme || (prefersDarkScheme ? 'dark' : 'light');
			
			// Apply theme immediately before page renders
			document.documentElement.setAttribute('data-theme', theme);
		})();
	</script>
	{{ void(this.head) }}
</head>
<body class="crelish-app-root u-text {% if this.params['isDocumentationMode'] is defined and this.params['isDocumentationMode'] == true %}documentation-mode{% endif %}">
{{ void(this.beginBody()) }}

<section class="cr-root_wrap">
	<div id="cr-left-pane" class="left-col scrollable {% if this.params['isDocumentationMode'] is defined and this.params['isDocumentationMode'] == true %}documentation-sidebar{% endif %}">
		<div class="logo-head">
			<a href="{{ url('crelish/dashboard/index') }}">
				<img src="{{ crelishBundle.baseUrl }}/img/Crelish-Logo-Light.svg" class="logo-light" border="0" width="128"/>
				<img src="{{ crelishBundle.baseUrl }}/img/Crelish-Logo-Dark.svg" class="logo-dark" border="0" width="128"/>
			</a>
		</div>
		<div class="navbar--main">
			{% include '@crelish/views/layouts/_side_nav.twig' %}
		</div>
	</div>
	<div id="cr-right-pane" class="scrollable">
		
		{{ header_bar_widget({
			'leftComponents': this.params['headerBarLeft'] ?? ['toggle-sidebar'],
			'rightComponents': this.params['headerBarRight'] ?? []
		}) | raw }}
		
		{{ flash_messages_widget() }}
		
		<section>
			{{ content | raw }}
		</section>
	</div>
</section>

<script type="text/javascript">
  function execDelete(url) {
    const urlParams = new URLSearchParams(window.location.search);
    window.location.href = url + '?uuid=' + urlParams.get('uuid') + '&ctype=' + urlParams.get('ctype')
  }
</script>

<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
	<div class="modal-dialog gc-no-border-radius">
		<div class="modal-content gc-no-border-radius gc-bc--palette-clouds">
			<div class="modal-header gc-no-border gc-bc--palette-silver-light">
				<h4 class="modal-title" id="myModalLabel">{{ t('app', 'Confirm Delete') }}</h4>
				<button type="button" class="close" data-bs-dismiss="modal" aria-hidden="true">Ã—</button>
			</div>
			<div class="modal-body">
				<p>{{ t('app', 'You are about to delete this record, this procedure is irreversible.') }}</p>
				<p>{{ t('app', 'Do you want to proceed?') }}</p>
			</div>
			<div class="modal-footer gc-no-border gc-bc--palette-silver-light">
				<button type="button" class="btn btn-default" data-bs-dismiss="modal">{{ t('app', 'Cancel') }}</button>
				<button type="button" class="btn btn-danger btn-ok"
				        onclick="execDelete('/crelish/{{ app.controller.id }}/delete')">{{ t('app', 'Delete') }}
				</button>
			</div>
		</div>
	</div>
</div>

<!-- Delete confirmation modal -->
<div class="modal fade" id="confirm-delete-selected" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteModalLabel">{{ t('app', 'Confirm Deletion') }}</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        {{ t('app', 'Are you sure you want to delete the selected items? This action cannot be undone.') }}
      </div>
      <div class="modal-footer">
        <button type="button" class="c-button c-button--ghost" data-bs-dismiss="modal">{{ t('app', 'Cancel') }}</button>
        <button type="button" class="c-button c-button--error" id="confirm-delete-btn">{{ t('app', 'Delete') }}</button>
      </div>
    </div>
  </div>
</div>

{% apply registerCss %}

.lang-ui-switch {
	display: flex;
	width: 100%;
	background-image: linear-gradient(130deg, #edd15f 25%, #d9c362 25%, #d9c362 50%, #edd15f 50%, #edd15f 75%, #d9c362 75%,
	#d9c362 100%);
	background-size: 52.22px 62.23px;
	padding: 1rem;
	margin-top: -1.5rem;
	z-index: 0;
	position: relative;
	margin-bottom: 2rem;
	box-shadow: inset 2px 2px 2px rgba(0, 0, 0, 0.2);
	justify-content: space-between;
	font-weight: bold;
}

.lang-ver {
	border-left: 1rem solid #FFBF00;
	padding-left: 1rem;
	transform: translateX(-1rem);
}

{% if this.params['isDocumentationMode'] is defined and this.params['isDocumentationMode'] == true %}
.documentation-sidebar {
    width: 240px !important;
    min-width: 240px !important;
}

.documentation-mode #cr-right-pane {
    width: calc(100% - 240px) !important;
}

@media (max-width: 992px) {
    .documentation-sidebar {
        width: 240px !important;
        min-width: 240px !important;
        transform: none !important;
        left: 0 !important;
    }
    
    .documentation-mode #cr-right-pane {
        width: 100% !important;
        margin-left: 0 !important;
    }
}
{% endif %}

{% endapply %}

{% apply registerJs %}
$(document).ready(function() {
	$('#language-select').on('change', function() {
		var selectedLanguage = $(this).val();
		$('[data-language]').hide();
		$('[data-language="' + selectedLanguage + '"]').show();
	});
	
	// Initial display on page load
	$('#language-select').trigger('change');

	// Handle confirm delete button click
	$('#confirm-delete-btn').on('click', function() {
		$('form[id$="-grid-form"]').submit();
	});
});
{% endapply %}

{{ void(this.endBody()) }}

</body>
</html>
{{ void(this.endPage()) }}
